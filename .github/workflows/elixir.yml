# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

permissions:
  contents: read

jobs:
  js-lint:
    name: JS Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.9.0'
      - name: Install dependencies
        run: npm install
      - name: Run Prettier
        run: npm run format-check

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: '27.0.1'
          elixir-version: '1.17.2'
      - name: Install dependencies
        run: mix deps.get
      - name: Run Lint
        run: mix format --check-formatted

  test:
    name: Build and test
    runs-on: ubuntu-latest
    services:
      scoreboard-db:
        image: postgres:10-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: go_champs_scoreboard_test
          # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: '27.0.1'
          elixir-version: '1.17.2'
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Start Redis
        uses: supercharge/redis-github-action@1.7.0
        with:
          redis-version: 7
      - name: Creates database
        run: mix ecto.create
        env:
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: go_champs_scoreboard_test
          DATABASE_HOST: localhost
      - name: Run migration
        run: mix ecto.migrate
        env:
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: go_champs_scoreboard_test
          DATABASE_HOST: localhost
      - name: Run tests
        run: mix test
        env:
          REDIS_URL: 127.0.0.1
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: go_champs_scoreboard_test
          DATABASE_HOST: localhost
